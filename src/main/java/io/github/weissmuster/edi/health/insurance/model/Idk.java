/**
 * This class was generated by Smooks EJC (http://www.smooks.org).
 */
package io.github.weissmuster.edi.health.insurance.model;

import java.io.Serializable;    
import org.milyn.smooks.edi.EDIWritable;    
import java.io.Writer;    
import org.milyn.edisax.model.internal.Delimiters;    
import java.io.IOException;    
import java.io.StringWriter;    
import java.util.List;    
import java.util.ArrayList;    
import org.milyn.edisax.util.EDIUtils;    
import org.milyn.edisax.model.internal.DelimiterType;    

public class Idk implements Serializable, EDIWritable {

    private static final long serialVersionUID = 1L;

    private String institutionIdentification;
    private String typeOfInstitution;
    private String shortName;
    private String vknr;

    public void write(Writer writer, Delimiters delimiters) throws IOException {
        
        Writer nodeWriter = new StringWriter();

        List<String> nodeTokens = new ArrayList<String>();

        if(institutionIdentification != null) {
            nodeWriter.write(delimiters.escape(institutionIdentification.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeWriter.write(delimiters.getField());
        if(typeOfInstitution != null) {
            nodeWriter.write(delimiters.escape(typeOfInstitution.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeWriter.write(delimiters.getField());
        if(shortName != null) {
            nodeWriter.write(delimiters.escape(shortName.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeWriter.write(delimiters.getField());
        if(vknr != null) {
            nodeWriter.write(delimiters.escape(vknr.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeTokens.add(nodeWriter.toString());
        writer.write(EDIUtils.concatAndTruncate(nodeTokens, DelimiterType.FIELD, delimiters));
        writer.write(delimiters.getSegmentDelimiter());
        writer.flush();
    }

    public String getInstitutionIdentification() {
        return institutionIdentification;
    }

    public Idk setInstitutionIdentification(String institutionIdentification) {
        this.institutionIdentification = institutionIdentification;  return this;
    }

    public String getTypeOfInstitution() {
        return typeOfInstitution;
    }

    public Idk setTypeOfInstitution(String typeOfInstitution) {
        this.typeOfInstitution = typeOfInstitution;  return this;
    }

    public String getShortName() {
        return shortName;
    }

    public Idk setShortName(String shortName) {
        this.shortName = shortName;  return this;
    }

    public String getVknr() {
        return vknr;
    }

    public Idk setVknr(String vknr) {
        this.vknr = vknr;  return this;
    }
}