/**
 * This class was generated by Smooks EJC (http://www.smooks.org).
 */
package io.github.weissmuster.edi.health.insurance.model;

import java.io.Serializable;    
import org.milyn.smooks.edi.EDIWritable;    
import java.util.List;    
import java.io.Writer;    
import org.milyn.edisax.model.internal.Delimiters;    
import java.io.IOException;    

public class Transmissions implements Serializable, EDIWritable {

    private static final long serialVersionUID = 1L;

    private List<Uem> uem;
    private List<Dfu> dfu;

    public void write(Writer writer, Delimiters delimiters) throws IOException {
        
        Writer nodeWriter = writer;

        if(uem != null && !uem.isEmpty()) {
            for(Uem uemInst : uem) {
                nodeWriter.write("UEM");
                nodeWriter.write(delimiters.getField());
                uemInst.write(nodeWriter, delimiters);
            }
        }
        if(dfu != null && !dfu.isEmpty()) {
            for(Dfu dfuInst : dfu) {
                nodeWriter.write("DFU");
                nodeWriter.write(delimiters.getField());
                dfuInst.write(nodeWriter, delimiters);
            }
        }
    }

    public List<Uem> getUem() {
        return uem;
    }

    public Transmissions setUem(List<Uem> uem) {
        this.uem = uem;  return this;
    }

    public List<Dfu> getDfu() {
        return dfu;
    }

    public Transmissions setDfu(List<Dfu> dfu) {
        this.dfu = dfu;  return this;
    }
}